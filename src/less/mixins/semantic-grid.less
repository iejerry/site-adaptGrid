// ==========================================================================
// Semantic-grid mixins
// ==========================================================================
@import "helpers.less";

#semantic {

	// row
	.row(@spans:@spans) {
		display: block;
		width: @totalWidth*((@gutterWidth + @gridsystemWidth)/@gridsystemWidth);
		margin: 0 @totalWidth*(((@gutterWidth*.5)/@gridsystemWidth)*-1);
		// *width: @totalWidth*((@gutterWidth + @gridsystemWidth)/@gridsystemWidth)-@correction;
		// *margin: 0 @totalWidth*(((@gutterWidth*.5)/@gridsystemWidth)*-1)-@correction;
		.clearfix;
	}

	// span
	.span(@x,@spans:@spans) {
		display: inline;
		float: left;
		width: @totalWidth*((((@gutterWidth+@spanWidth)*@x)-@gutterWidth) / @gridsystemWidth);
		margin: 0 @totalWidth*((@gutterWidth*.5)/@gridsystemWidth);
		// *width: @totalWidth*((((@gutterWidth+@spanWidth)*@x)-@gutterWidth) / @gridsystemWidth)-@correction;
		// *margin: 0 @totalWidth*((@gutterWidth*.5)/@gridsystemWidth)-@correction;
	}

	// push will make moves to the right
	.push(@offset:1) {
		margin-left: @totalWidth*(((@gutterWidth+@spanWidth)*@offset) / @gridsystemWidth) + @totalWidth*((@gutterWidth*.5)/@gridsystemWidth);
	}

	// pull will make moves to the left
	.pull(@offset:1) {
		margin-right: @totalWidth*(((@gutterWidth+@spanWidth)*@offset) / @gridsystemWidth) + @totalWidth*((@gutterWidth*.5)/@gridsystemWidth);
	}
}u